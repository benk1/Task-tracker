{"version":3,"sources":["components/Button.jsx","components/Header.jsx","components/Task.jsx","components/Tasks.jsx","components/AddTask.jsx","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","prototypes","PropTypes","string","isRequired","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","result","length","map","AddTask","useState","SetText","SetDay","SetReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","Math","floor","random","newTask","filter","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0372ccf6.chunk.js","sourcesContent":["import React from 'react'\nimport { PropTypes } from 'prop-types';\n\nconst Button = ({color,text,onClick}) => {\n    return (\n        <div>\n        <button onClick={onClick} style={{backgroundColor: color}}className='btn'>{text}</button>\n            \n        </div>\n    )\n}\nButton.defaultProps = {\n    color: 'steelblue'\n}\nButton.propTypes = {\n    text: PropTypes.string,\n    color: PropTypes.string\n}\n\nexport default Button\n","import PropTypes from 'prop-types';\nimport Button from './Button';\nconst Header = ({ title, onAdd, showAdd }) => {\n\treturn (\n\t\t<div>\n\t\t\t<header className='header'>\n\t\t\t\t<h1>{title}</h1>\n\t\t\t\t<Button\n\t\t\t\t\tcolor={showAdd ? 'red' : 'green'}\n\t\t\t\t\ttext={showAdd ? 'Close' : 'Add'}\n\t\t\t\t\tonClick={onAdd}\n\t\t\t\t/>\n\t\t\t</header>\n\t\t</div>\n\t);\n};\nHeader.defaultProps = {\n\ttitle: 'Task Tracker',\n};\nHeader.prototypes = {\n\ttitle: PropTypes.string.isRequired,\n};\n\nexport default Header;\n","import { FaTrash } from 'react-icons/fa';\nimport React from 'react';\n\nconst Task = ({ task, onDelete, onToggle }) => {\n\treturn (\n\t\t<div\n\t\t\tclassName={`task ${task.reminder ? 'reminder' : ''}`}\n\t\t\tonDoubleClick={() => onToggle(task.id)}\n\t\t>\n\t\t\t<h3>\n\t\t\t\t{task.text}\n\n\t\t\t\t<FaTrash\n\t\t\t\t\tonClick={() => onDelete(task.id)}\n\t\t\t\t\tstyle={{ color: 'red', cursor: 'pointer' }}\n\t\t\t\t/>\n\t\t\t</h3>\n\t\t\t<p>{task.day}</p>\n\t\t</div>\n\t);\n};\n\nexport default Task;\n","import Task from './Task';\n\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\n\tconst result =\n\t\ttasks.length === 0 ? (\n\t\t\t<h3>Please Add Tasks!</h3>\n\t\t) : (\n\t\t\ttasks.map((task) => (\n\t\t\t\t<Task\n\t\t\t\t\tkey={task.id}\n\t\t\t\t\ttask={task}\n\t\t\t\t\tonDelete={onDelete}\n\t\t\t\t\tonToggle={onToggle}\n\t\t\t\t/>\n\t\t\t))\n\t\t);\n\treturn (\n\t\t<>\n\t\t\t<h3>We have {tasks.length} Tasks at the moment</h3>\n\t\t\t{result}\n\t\t</>\n\t);\n};\n\nexport default Tasks;\n","import { useState } from 'react';\n\nconst AddTask = ({ onAdd }) => {\n\tconst [text, SetText] = useState('');\n\tconst [day, SetDay] = useState('');\n\tconst [reminder, SetReminder] = useState('false');\n\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault();\n\t\tif (!text) {\n\t\t\talert('Please add a Task!');\n\t\t\treturn;\n\t\t}\n\t\tonAdd({ text, day, reminder });\n\n\t\tSetText('');\n\t\tSetDay('');\n\t\tSetReminder(false);\n\t};\n\n\treturn (\n\t\t<form className='add-form' onSubmit={handleSubmit}>\n\t\t\t<div className='form-control'>\n\t\t\t\t<label>Task</label>\n\t\t\t\t<input\n\t\t\t\t\ttype='text'\n\t\t\t\t\tid='text'\n\t\t\t\t\tplaceholder='Add Task'\n\t\t\t\t\tvalue={text}\n\t\t\t\t\tonChange={(e) => SetText(e.target.value)}\n\t\t\t\t/>\n\t\t\t</div>\n\n\t\t\t<div className='form-control '>\n\t\t\t\t<label>Day & Time</label>\n\t\t\t\t<input\n\t\t\t\t\ttype='text'\n\t\t\t\t\tid='day'\n\t\t\t\t\tplaceholder='Add Day & Time'\n\t\t\t\t\tvalue={day}\n\t\t\t\t\tonChange={(e) => SetDay(e.target.value)}\n\t\t\t\t/>\n\t\t\t</div>\n\n\t\t\t<div className='form-control form-control-check'>\n\t\t\t\t<label>Set Reminder</label>\n\t\t\t\t<input\n\t\t\t\t\ttype='checkbox'\n\t\t\t\t\tchecked={reminder}\n\t\t\t\t\tid='reminder'\n\t\t\t\t\tvalue={reminder}\n\t\t\t\t\tonChange={(e) => SetReminder(e.currentTarget.checked)}\n\t\t\t\t/>\n\t\t\t</div>\n\n\t\t\t<input type='submit' value='Save Task' className='btn btn-block' />\n\t\t</form>\n\t);\n};\n\nexport default AddTask;\n","import Header from './components/Header';\nimport Tasks from './components/Tasks';\nimport { useState } from 'react';\nimport AddTask from './components/AddTask';\nfunction App() {\n\tconst [showAddTask, setShowAddTask] = useState(false);\n\tconst [tasks, setTasks] = useState([\n\t\t{\n\t\t\tid: 1,\n\t\t\ttext: 'Doctors Appointment',\n\t\t\tday: 'Feb 2nd at 6:00pm',\n\t\t\treminder: true,\n\t\t},\n\t\t{\n\t\t\tid: 2,\n\t\t\ttext: 'Meeting at work',\n\t\t\tday: 'Feb 4th at 1:30pm',\n\t\t\treminder: true,\n\t\t},\n\t\t{\n\t\t\tid: 3,\n\t\t\ttext: 'Food Shopping',\n\t\t\tday: 'Feb 10th at 9:00pm',\n\t\t\treminder: false,\n\t\t},\n\t]);\n\t//Add Task\n\tconst handleAdd = (task) => {\n\t\tconst id = Math.floor(Math.random() * 10000) + 1;\n\t\tconst newTask = { id, ...task };\n\t\tsetTasks([...tasks, newTask]);\n\t};\n\t//Delete a Task\n\tconst handleDelete = (id) => {\n\t\tsetTasks(tasks.filter((task) => task.id !== id));\n\t};\n\n\tconst toggleReminder = (id) => {\n\t\tsetTasks(\n\t\t\ttasks.map((task) =>\n\t\t\t\ttask.id === id ? { ...task, reminder: !task.reminder } : task\n\t\t\t)\n\t\t);\n\t\tconsole.log(id);\n\t};\n\treturn (\n\t\t<div className='container'>\n\t\t\t<Header\n\t\t\t\ttitle='Welcome To Task Tracker App'\n\t\t\t\tonAdd={() => setShowAddTask(!showAddTask)}\n\t\t\t\tshowAdd={showAddTask}\n\t\t\t/>\n\t\t\t{showAddTask && <AddTask onAdd={handleAdd} />}\n\t\t\t<Tasks tasks={tasks} onDelete={handleDelete} onToggle={toggleReminder} />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}